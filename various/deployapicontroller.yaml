apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: docker-openarena-k8s-api
  labels:
    name: docker-openarena-k8s-api
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        name: docker-openarena-k8s-api
    spec:
      containers:
      - name: docker-openarena-k8s-api
        image: docker.io/dgkanatsios/docker_openarena_k8s_api:latest
        imagePullPolicy: Always
        env:
          - name: STORAGE_ACCOUNT_NAME
            valueFrom:
              secretKeyRef:
                name: openarena-storage-secret
                key: azurestorageaccountname
          - name: STORAGE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: openarena-storage-secret
                key: azurestorageaccountkey
        ports:
        - containerPort: 8000
          protocol: TCP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: docker-openarena-k8s-controller
  labels:
    name: docker-openarena-k8s-controller
spec:
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        name: docker-openarena-k8s-controller
    spec:
      containers:
      - name: docker-openarena-k8s-controller
        image: docker.io/dgkanatsios/docker_openarena_k8s_controller:latest
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: docker-openarena-k8s-api
  labels:
    name: docker-openarena-k8s-api
spec:
  ports:
    # the port that this service should serve on
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  # label keys and values that must match in order to receive traffic for this service
  selector:
    name: docker-openarena-k8s-api
  type: LoadBalancer